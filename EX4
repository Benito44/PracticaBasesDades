Apartat 4 (3 punts). Volem tenir una taula anomenada llei_dhont a on hi hagi per cada provincia i
candidatura el número d’escons que ha tret la candidatura en aquella província.
DDL per crear la taula llei_dhont
CREATE TABLE llei_dhont (
eleccio_id TINYINT,
provincia_id TINYINT,
candidatura_id INT,
num_escons TINYINT,
CONSTRAINT pk_llei_dhont PRIMARY KEY (eleccio_id, provincia_id,
candidatura_id)
)
Per omplir aquesta taula crea un subprograma encarregat de fer aquesta feina. Aquest subprograma
ha de rebre com a paràmetres la PK de les eleccions i la PK de la província.
spCalcularLleiHontEleccionsProvincia(pEleccioId, pProvinciaId)




#ejercicio para probar

USE mydb;
DROP PROCEDURE if exists calcul_escons;
DELIMITER //
CREATE PROCEDURE calcul_escons(IN Pprovincia_id INT,IN Peleccio_id INT)
BEGIN
    DECLARE num_escons_var INT;
    DECLARE total_vots_prov INT;
    DECLARE eliminats INT DEFAULT 0;
    DECLARE quota INT;
    DECLARE total_vots_candidatura INT;
    DECLARE num_vots_eliminar INT;
    DECLARE num_escons_finals INT;
    DECLARE esco INT DEFAULT 1;

	DROP TABLE IF EXISTS llei_dhont;
	CREATE TABLE llei_dhont (
		llei_dhont_id  INT AUTO_INCREMENT,
		eleccio_id TINYINT,
		provincia_id TINYINT,
		candidatura_id INT,
        vots INT,
		num_escons TINYINT,
	CONSTRAINT pk_llei_dhont PRIMARY KEY (llei_dhont_id)
	);

    
    -- Obtenemos el número de escaños para la provincia dada
    SET num_escons_var = (SELECT num_escons FROM provincies WHERE provincia_id = Pprovincia_id);

    -- Obtenemos los votos totales para la provincia dada
    SELECT SUM(vots) INTO total_vots_prov FROM vots_candidatures_prov WHERE provincia_id = Pprovincia_id;
    
        DROP TABLE if exists tmp_candidatures;
    -- Creamos una tabla temporal para almacenar los resultados intermedios
    CREATE TABLE tmp_candidatures (
        candidatura_id INT,
        num_vots INT,
        eliminada BOOLEAN DEFAULT FALSE
    );
    
    -- Insertamos los votos de cada candidatura en la tabla temporal
    INSERT INTO tmp_candidatures (candidatura_id, num_vots) SELECT candidatura_id, vots FROM vots_candidatures_prov
    WHERE provincia_id = Pprovincia_id GROUP BY provincia_id, candidatura_id;
    
    -- Eliminamos cualquier candidatura que tenga menos del 5% de los votos totales para la provincia
    SET num_vots_eliminar = FLOOR(total_vots_prov * 0.05);
    UPDATE tmp_candidatures SET eliminada = TRUE WHERE num_vots < num_vots_eliminar;
    SELECT COUNT(*) INTO eliminats FROM tmp_candidatures WHERE eliminada = TRUE;
    
DROP TABLE if exists tmp_escons;
-- Crear tabla temporal para guardar los resultados
CREATE TABLE tmp_escons (eleccio_id INT, provincia_id INT, candidatura_id INT, esco_id INT, num_vots FLOAT);

-- Loop para dividir los votos por los escaños correspondientes
WHILE(num_escons_var >= esco) DO
    INSERT INTO tmp_escons (eleccio_id, provincia_id, candidatura_id, esco_id, num_vots)
    SELECT Peleccio_id, Pprovincia_id, c.candidatura_id, esco, c.num_vots / esco
    FROM tmp_candidatures c
    WHERE c.eliminada = FALSE;
    SET  esco = esco + 1;
END WHILE;

-- Seleccionar los resultados más altos hasta el número de escaños correspondiente
INSERT INTO llei_dhont (eleccio_id, provincia_id, candidatura_id, vots , num_escons)
SELECT eleccio_id, provincia_id, candidatura_id, num_vots, COUNT(candidatura_id)
FROM tmp_escons
GROUP BY provincia_id, candidatura_id, eleccio_id,num_vots
HAVING candidatura_id
ORDER BY num_vots DESC
LIMIT num_escons_var;
-- Eliminar tabla temporal
END //

CALL calcul_escons(4,1);
